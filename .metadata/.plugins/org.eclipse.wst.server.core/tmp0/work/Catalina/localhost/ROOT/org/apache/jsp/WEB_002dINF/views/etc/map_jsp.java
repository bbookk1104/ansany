/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-09-14 05:56:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.etc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.iei.member.vo.Member;

public final class map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1662617457082L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1661910696206L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.or.iei.member.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>지도</title>\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=mr9pd4jpg4&submodules=geocoder\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

    	Member m = (Member)session.getAttribute("m");
    
      out.write("\r\n");
      out.write("    <!-- 구글 아이콘 -->\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- jquery -->\r\n");
      out.write("    <script src=\"/js/jquery-3.6.0.js\"></script>\r\n");
      out.write("    <!-- 기본 CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/default.css\" />\r\n");
      out.write("    <!-- 기본 js -->\r\n");
      out.write("    <script src=\"/js/default.js\"></script>\r\n");
      out.write("	<header>\r\n");
      out.write("      <div class=\"site-logo\">\r\n");
      out.write("        <a href=\"/\">BOOOOP!</a>\r\n");
      out.write("      </div>\r\n");
      out.write("      <nav>\r\n");
      out.write("        <ul class=\"navi\">\r\n");
      out.write("          <li><a href=\"/noticeList.do?reqPage=1\">공지사항</a></li>\r\n");
      out.write("          <li><a href=\"#\">자유게시판</a></li>\r\n");
      out.write("          <li><a href=\"/ajax.do\">AJAX</a></li>\r\n");
      out.write("          <li><a href=\"/photoList.do\">사진게시판</a></li>\r\n");
      out.write("          <li>\r\n");
      out.write("			<a href=\"#\">API</a>\r\n");
      out.write("            <ul class=\"sub-navi\">\r\n");
      out.write("              <li><a href=\"/email.do\">EMAIL</a></li>\r\n");
      out.write("              <li><a href=\"/map.do\">MAP</a></li>\r\n");
      out.write("              <li><a href=\"/pay.do\">결제모듈</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("           </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </nav>\r\n");
      out.write("      <div class=\"header-link\">\r\n");
      out.write("      	");
if(m==null) {
      out.write("\r\n");
      out.write("        <button class=\"btn bc11 modal-open-btn\" target=\"#login-modal\">SIGN IN</button>\r\n");
      out.write("        <a class=\"btn bc11\" href=\"/signupFrm.do\">SIGN UP</a>\r\n");
      out.write("        ");
} else{ 
      out.write("\r\n");
      out.write("        <!-- <a class=\"btn bc11\" href=\"/mypage1.do\">");
      out.print(m.getMemberName() );
      out.write("</a> -->\r\n");
      out.write("        <a class=\"btn bc11\" href=\"/mypage2.do?memberId=");
      out.print(m.getMemberId());
      out.write('"');
      out.write('>');
      out.print(m.getMemberName() );
      out.write("</a>\r\n");
      out.write("        <a class=\"btn bc11\" href=\"/logout.do\">LOGOUT</a>        \r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("    </header>\r\n");
      out.write("    ");
if(m==null) {
      out.write("\r\n");
      out.write("    <div id=\"login-modal\" class=\"modal-bg\">\r\n");
      out.write("      <div class=\"modal-wrap\">\r\n");
      out.write("        <div class=\"modal-head\">\r\n");
      out.write("          <h2>SIGN IN</h2>\r\n");
      out.write("          <span class=\"material-icons close-icon modal-close\">close</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <form action=\"/signin.do\" method=\"post\">\r\n");
      out.write("	        <div class=\"modal-content\">\r\n");
      out.write("	          <div class=\"input-box\">\r\n");
      out.write("	          	<label for=\"signId\">아이디</label>\r\n");
      out.write("	          	<input type=\"text\" name=\"signId\" id=\"signId\" class=\"input-form\" placeholder=\"아이디입력\">\r\n");
      out.write("	          </div>\r\n");
      out.write("	          <div class=\"input-box\">\r\n");
      out.write("	          	<label for=\"signPw\">비밀번호</label>\r\n");
      out.write("	          	<input type=\"password\" name=\"signPw\" id=\"signPw\" class=\"input-form\" placeholder=\"비밀번호입력\">\r\n");
      out.write("	          </div>\r\n");
      out.write("	          <div class=\"input-box link-box\">\r\n");
      out.write("	          	<a href=\"/searchIdPwFrm.do\">아이디/비밀번호 찾기</a>\r\n");
      out.write("	          </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <div class=\"modal-foot\">\r\n");
      out.write("	          <button type=\"submit\" class=\"btn bc11\">로그인</button>\r\n");
      out.write("	          <button type=\"button\" class=\"btn bc1 modal-close\">취소</button>\r\n");
      out.write("	        </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
} 
      out.write("\r\n");
      out.write("	<div class=\"page-content\">\r\n");
      out.write("		<div class=\"page-title\">지도 API</div>\r\n");
      out.write("		<h2>1. 다음 주소찾기 API</h2>\r\n");
      out.write("		<div class=\"address-wrap\">\r\n");
      out.write("			<input type=\"text\" name=\"postcode\" id=\"postcode\" class=\"input-form\" readonly>\r\n");
      out.write("			<button class=\"btn bc1\" onclick=\"searchAddr();\">주소찾기</button>\r\n");
      out.write("			<input type=\"text\" name=\"address\" id=\"address\" class=\"input-form\" readonly>\r\n");
      out.write("			<input type=\"text\" name=\"detailAddress\" id=\"detailAddress\" class=\"input-form\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<h2>2. 네이버 지도 API</h2>\r\n");
      out.write("		<div id=\"map\" style=\"width:100%;height:500px;\"></div>\r\n");
      out.write("		<button onclick=\"showMap();\" class=\"btn bc1\">지도옮기기</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		const map = new naver.maps.Map(\"map\",{\r\n");
      out.write("			center : new naver.maps.LatLng(37.533837,126.896836),\r\n");
      out.write("			zoom : 17,\r\n");
      out.write("			zoomControl : true,\r\n");
      out.write("			zoomControlOptions : {\r\n");
      out.write("				position : naver.maps.Position.TOP_RIGHT,\r\n");
      out.write("				style : naver.maps.ZoomControlStyle.SMALL\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		const marker = new naver.maps.Marker({\r\n");
      out.write("			position : new naver.maps.LatLng(37.533837,126.896836),\r\n");
      out.write("			map : map//위에서 만든 지도(const map)\r\n");
      out.write("		});\r\n");
      out.write("		let contentString = [\r\n");
      out.write("			\"<div class='iw_inner'>\",\r\n");
      out.write("			\"	<h3>KH정보교육원</h3>\",\r\n");
      out.write("			\"	<p>서울시 영등포구 선유동2로 57 이레빌딩 19F A강의장</p>\",\r\n");
      out.write("			\"</div>\"\r\n");
      out.write("		].join(\"\");\r\n");
      out.write("		let infoWindow = new naver.maps.InfoWindow();\r\n");
      out.write("		//마커에 클릭이벤트 추가\r\n");
      out.write("		naver.maps.Event.addListener(marker,\"click\",function(e){\r\n");
      out.write("			infoWindow = new naver.maps.InfoWindow({\r\n");
      out.write("				content : contentString\r\n");
      out.write("			});\r\n");
      out.write("			//생성된 infoWindow를 map의 marker위치에 생성\r\n");
      out.write("			infoWindow.open(map,marker);\r\n");
      out.write("		});\r\n");
      out.write("		//지도에 클릭이벤트 추가\r\n");
      out.write("		naver.maps.Event.addListener(map,\"click\",function(e){\r\n");
      out.write("			marker.setPosition(e.coord);//클릭한 해당위치로 마커 이동\r\n");
      out.write("			if(infoWindow.getMap()){//정보창이 지도 위에 올라가있으면(=infoWindow.open)\r\n");
      out.write("				infoWindow.close();\r\n");
      out.write("			}\r\n");
      out.write("			//위경도를 통해서 해당 위치의 주소를 알아내기\r\n");
      out.write("			naver.maps.Service.reverseGeocode({\r\n");
      out.write("				location: new naver.maps.LatLng(e.coord.lat(),e.coord.lng())\r\n");
      out.write("			},function(status,response){\r\n");
      out.write("				if(status != naver.maps.Service.Status.OK){\r\n");
      out.write("					return alert(\"주소를 찾을 수 없습니다.\");\r\n");
      out.write("				}\r\n");
      out.write("				console.log(response);\r\n");
      out.write("				const address = response.result.items[1].address;\r\n");
      out.write("				console.log(address);\r\n");
      out.write("				contentString=[\r\n");
      out.write("					\"<div class='iw_inner'>\",\r\n");
      out.write("					\"	<p>\"+address+\"</p>\",\r\n");
      out.write("					\"</div>\"\r\n");
      out.write("				].join(\"\");\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		function showMap(){\r\n");
      out.write("			const addr = $(\"#address\").val();\r\n");
      out.write("			naver.maps.Service.geocode({address:addr}, function(status,response){\r\n");
      out.write("				if(status === naver.maps.Service.Status.ERROR){\r\n");
      out.write("					return alert(\"조회에러\");\r\n");
      out.write("				}\r\n");
      out.write("				console.log(response);\r\n");
      out.write("				const lng = response.result.items[1].point.x;//경도 값\r\n");
      out.write("				const lat = response.result.items[1].point.y;//위도 값\r\n");
      out.write("				//지도에서 사용할 위도&경도 위치 객체\r\n");
      out.write("				const latlng = new naver.maps.LatLng(lat,lng);\r\n");
      out.write("				map.setCenter(latlng);//지도 중심 이동\r\n");
      out.write("				marker.setPosition(latlng);//마커 위치 이동\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		function searchAddr() {\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete : function(data) {\r\n");
      out.write("					// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.\r\n");
      out.write("					// 예제를 참고하여 다양한 활용법을 확인해 보세요.\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					$(\"#postcode\").val(data.zonecode);\r\n");
      out.write("					$(\"#address\").val(data.roadAddress);\r\n");
      out.write("					$(\"#detailAddress\").focus();\r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<footer>\r\n");
      out.write("      <div class=\"footer-content\">\r\n");
      out.write("        <ul>\r\n");
      out.write("          <li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("          <li><a href=\"#\">개인정보취급방침</a></li>\r\n");
      out.write("          <li><a href=\"#\">인재채용</a></li>\r\n");
      out.write("          <li><a href=\"#\">제휴문의</a></li>\r\n");
      out.write("          <li><a href=\"#\">인스타그램</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <p>Made by LeeYunSu</p>\r\n");
      out.write("        <p>\r\n");
      out.write("          KH정보교육원 당산지원 A강의장 수업자료입니다. 무단복제를 허용하지\r\n");
      out.write("          않습니다.\r\n");
      out.write("        </p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
